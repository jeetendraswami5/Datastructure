#include<iostream>
using namespace std;
int top = -1,front =-1,rear=-1;
int isPrime(int n) { 
    int i;
    if(n == 2) return 1;
    if(n%2 == 0) return -1;
    for(i = 3; i*i<=n; i+=2) {
        if(n%i == 0) return -1;
    }
    return 1;
} 
    
   

void push(int s[],int n,int item)
{
    
       if(top != n-1)
        {
            if(top == -1)
            {
                top=0;
                s[top] = item;
            }
            else
            {
                top++;
                s[top] = item;
            }
        }
}

void queue(int queue[],int n,int item)
{
    
    
        if(rear == -1)
       {
           front = rear = 0;
           queue[rear] = item;
       }
        else
       {
            rear++;
            queue[rear] = item;
       }
    
}

void display2(int queue[],int n)
{
    for(int i=front;i<=rear;i++)
    cout<<queue[i]<<" ";
}

void display1(int stack[],int n)
{
    
    for(int i=top;i>=0;i--)
    cout<<stack[i]<<" ";
}
int main()
{
    int n,m,f;
    cin>>n;
    int a[n] ,stacks[n],queues[n];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    
    for(int j=0;j<n;j++)
    {
           
        m =a[j];
        f = isPrime(m);
        
        if(f == -1)
        push(stacks,n,m);
        else
        queue(queues,n,m);
    }
    
    display2(queues,n);
    cout<<"\n";
    display1(stacks,n);
}
